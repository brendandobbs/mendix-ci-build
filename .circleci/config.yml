version: 2.1
executors:
   docker-publisher:
     environment:
       IMAGE_NAME: brendandobbs/mendix-sample-app
     docker:
       - image: circleci/buildpack-deps:stretch

jobs:  
  build:  
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Installing kubectl
          command: sudo apt-get update && sudo apt-get install -y apt-transport-https && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -  && echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list && sudo apt-get update && sudo apt-get install -y kubectl
      - run: 
          name:  Setting kubeconfig
          command: echo "${KUBECONFIG_FILE}" | base64 --decode >> /tmp/kubeconfig.json
      - run:
          name: Get buildpack
          command: git clone --branch v2.3.1 --config core.autocrlf=false https://github.com/mendix/docker-mendix-buildpack
      - run:
          name: Install svn
          command: sudo apt-get install subversion 
      - run:
          name: Checkout Mendix Code
          command:  svn co --no-auth-cache https://teamserver.sprintr.com/${MENDIX_APP}/${SVN_BRANCH} ./docker-mendix-buildpack/trunk --username ${SVN_USERNAME} --password ${SVN_PASSWORD}
      - run:
          name: Install git
          command: sudo apt-get install git 
      - run: 
          name: Build Image
          command: cd docker-mendix-buildpack && docker build --build-arg BUILD_PATH=./trunk     --tag mendix-samp/mendix-buildpack:v1.2 .
      - run:
          name: Push Docker Image
          command: |
              echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              docker push $IMAGE_NAME:latest
      - run: 
          name: Deploying
          command: |
             export KUBECONFIG=/tmp/kubeconfig.json
             case $CIRCLE_BRANCH in
                "develop")
                     export NAMESPACE=${STAGING_NAMESPACE}
                     ;;
                  "master")
                      export NAMESPACE=${PRODUCTION_NAMESPACE}
                      ;;
             esac
             echo "Deploying to ${NAMESPACE}"
             kubectl config set-context --current --namespace=${NAMESPACE}
             kubectl kubectl apply -f k8s --recursive             
workflows:
  version: 2
  main:
    jobs:
    - build:
       filters:
         branches:
           only: 
              - master
              - develop
