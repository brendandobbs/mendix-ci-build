version: 2.1
executors:
   docker-publisher:
     environment:
       IMAGE_NAME: brendandobbs/mendix-sample-app
     docker:
       - image: circleci/buildpack-deps:stretch

jobs:  
  build:  
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Installing kubectl
          command: sudo apt-get update && sudo apt-get install -y apt-transport-https && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -  && echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list && sudo apt-get update && sudo apt-get install -y kubectl
      - run: 
          name:  Setting kubeconfig
          command: echo "${KUBECONFIG_FILE}" | base64 --decode >> /tmp/kubeconfig.json
      - run:
          name: Get buildpack
          command: git clone --branch v2.3.1 --config core.autocrlf=false https://github.com/mendix/docker-mendix-buildpack
      - run:
          name: Install svn
          command: sudo apt-get install subversion 
      - run:
          name: Checkout Mendix Code
          command:  svn co --no-auth-cache https://teamserver.sprintr.com/${MENDIX_APP}/${SVN_BRANCH} ./docker-mendix-buildpack/trunk --username ${SVN_USERNAME} --password ${SVN_PASSWORD}
      - run:
          name: Install git
          command: sudo apt-get install git 
      - run: 
          name: Build Image
          command: cd docker-mendix-buildpack && docker build --build-arg BUILD_PATH=./trunk     --tag $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
              echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
              docker push $IMAGE_NAME:latest
      - run:
          name: Install Helm
          command: |
              curl -L https://git.io/get_helm.sh > get_helm.sh
              chmod 700 get_helm.sh
              ./get_helm.sh --version v2.10.0
      - run:
          name: Helm Certs
          command: |
              export KUBECONFIG=/tmp/kubeconfig.json
              echo "$(helm home)"
              helm init
              kubectl get -n kyma-installer secret helm-secret -o jsonpath="{.data['global\.helm\.ca\.crt']}" | base64 --decode > "/home/circleci/.helm/ca.pem";
              kubectl get -n kyma-installer secret helm-secret -o jsonpath="{.data['global\.helm\.tls\.crt']}" | base64 --decode > "/home/circleci/.helm/cert.pem";
              kubectl get -n kyma-installer secret helm-secret -o jsonpath="{.data['global\.helm\.tls\.key']}" | base64 --decode > "/home/circleci/.helm/key.pem";
      - run: 
          name: Deploying
          command: |
             export KUBECONFIG=/tmp/kubeconfig.json
             case $CIRCLE_BRANCH in
                "develop")
                     export NAMESPACE=${STAGING_NAMESPACE}
                     ;;
                  "master")
                      export NAMESPACE=${PRODUCTION_NAMESPACE}
                      ;;
             esac
             echo "Deploying to ${NAMESPACE}"
             kubectl config set-context --current --namespace=${NAMESPACE}
             helm upgrade --install --tls --set image.repository=${IMAGE_NAME},image.tag=latest mendix-app-v2 ./mendix-app  
workflows:
  version: 2
  main:
    jobs:
    - build:
       filters:
         branches:
           only: 
              - master
              - develop
